---
// This nav bar is designed to have the logo on the left, links on the right, a burger menu with a collapsable side nav menu.
// it is compatible with the Dropdown small component
// it has hover top / scroll up appearing animations that are unfinished
// plans to make the page unscrollable when mob nav is active

import MenuItem from "@components/frame/nav/Menu-item.astro";

// add  & logo
import Socials from "@components/Socials.astro";

import { TbX as Close } from "react-icons/tb";
import { TbMenu2 as Menu } from "react-icons/tb";

import Dropdown from "@components/frame/nav/Dropdown-small.astro";

const bumbleHover = " hover:text-bumble transition-colors duration-300";
---

<nav class="nav bg-atlantic" id="nav">
  <div
    class="flex justify-between min-h-fill items-center md:items-end z-50 bg-atlantic text-white text-5xl relative nav-main"
    id="nav-main"
  >
    <a href="/" class="">
      <img
        src={"/media/logos/nav-logo.svg"}
        alt="Southside Climbing"
        class="logo"
      />
    </a>
    <div id="links" class="">
      <div
        id="links-bg"
        class="fixed transition-opacity opacity-0 bg-atlantic-800/40 top-0 left-0 z-50 md:hidden"
        onclick="closeMenu()"
      >
      </div>

      <div
        id="links-items"
        class="fixed top-0 -right-full md:right-0 flex flex-col gap-3 transition-none ease-in duration-300 md:transition-none md:flex-row bg-atlantic-600 p-4 max-w-1/3 z-50 md:z-50 md:p-0 md:bg-transparent md:relative h-full"
      >
        <Close
          className={"ml-auto md:hidden max-w-10" + bumbleHover}
          id="close"
        />
        <ul class="flex flex-col gap-4 md:flex-row md:gap-8 pr-3">
          <MenuItem href="/about">About</MenuItem>
          <!-- <MenuItem href="/blog">Blog</MenuItem> -->

          <Dropdown href="/courses" title="Courses">
            <MenuItem href="/courses/learn-to-belay" classes="md:pt-1">
              Learn To Belay
            </MenuItem>
            <MenuItem href="/private-guiding">Private Guiding</MenuItem>
            <MenuItem href="/courses/bouldering-coaching"
              >Bouldering Coaching</MenuItem
            >
            <MenuItem href="/courses/kids-club">Kid's Club</MenuItem>
            <!-- <MenuItem href="/coaching">Coaching</MenuItem> -->
            <!-- <MenuItem href="/pad-hire">Pad Hire</MenuItem> -->
          </Dropdown>
          <MenuItem href="/contact">Contact</MenuItem>
        </ul>
        <Socials
          classes={"links-socials flex gap-3 items-end pt-3 mt-auto md:hidden"}
          iconClasses={"max-w-10" + bumbleHover}
        />
      </div>
    </div>
    <Menu className={"burger md:hidden text-white" + bumbleHover} id="burger" />
  </div>
</nav>
<script is:inline>
  // nav appear on scroll up
  // Add extra height to the Component Below
  // keep track of previous scroll position
  let prevScrollPos = window.scrollY;

  const nav = document.querySelector("#nav");
  const navMain = document.querySelector("#nav-main");
  let navMainHeight;

  window.addEventListener("DOMContentLoaded", () => {
    nav.clientHeight == navMain.clientHeight;
    navMainHeight == navMain.clientHeight;
  });

  // function navAppear() {
  //   nav.style.transition = `top .5s`;
  //   nav.style.position = "fixed";
  //   nav.style.top = `0`;
  // }
  // window.addEventListener("scroll", function () {
  //   // current scroll position
  //   const currentScrollPos = window.scrollY;

  //   if (currentScrollPos > prevScrollPos) {
  //     // if user scrolls down
  //     if (currentScrollPos >= navMainHeight) {
  //       navMain.style.transition = `top 1s`;
  //       navMain.style.top = `-${navMainHeight}px`;
  //     }
  //   } else if (currentScrollPos >= navMainHeight * 3) {
  //     // if user scrolls up
  //     navAppear();
  //   }

  //   prevScrollPos = currentScrollPos;
  // });

  window.addEventListener("mousemove", (event) => {
    const cursorY = event.clientY;
    const currentScrollPos = window.scrollY;

    if (cursorY < navMainHeight) {
      if (window.innerWidth > 768 && currentScrollPos > navMainHeight * 3) {
        navAppear();
      }
    }
  });

  // Open/Close mobile menu
  const links = document.querySelector("#links-items");
  const linksBG = document.querySelector("#links-bg");
  const burger = document.querySelector("#burger");
  const close = document.querySelector("#close");

  burger.addEventListener("click", () => openMenu());
  close.addEventListener("click", () => closeMenu());

  function openMenu() {
    links.classList.replace("transition-none", "transition-position");
    links.classList.replace("-right-full", "right-0");
    linksBG.classList.add("size-full", "opacity-100");
    linksBG.classList.replace("opacity-0", "opacity-100");
    document.body.style.overflow = "hidden";
  }

  function closeMenu() {
    links.classList.replace("transition-position", "transition-none");
    links.classList.replace("right-0", "-right-full");

    linksBG.classList.replace("opacity-100", "opacity-0");
    linksBG.classList.remove("size-full");
    document.body.style.overflow = "";
  }

  window.addEventListener("resize", () => {
    nav.clientHeight == navMain.clientHeight;
    navMainHeight = navMain.clientHeight;
  });
</script>

<style lang="scss">
  .nav {
    margin-bottom: -1px;
    // @media (min-width: 768px) {

    // }
  }

  .nav-main {
    max-width: 1400px;
    margin: 0 auto -1px;
    padding: calc(1vw + 0.125rem) calc(0.5rem + 1vw);
    @media (min-width: 768px) {
      padding: 0.5rem 1rem 0;
    }
  }

  .logo {
    width: clamp(100px, 70vw, 320px);
    height: auto;

    @media (min-width: 768px) {
      width: clamp(320px, 30vw, 360px);
      padding-bottom: 0.25rem;
    }
  }

  .burger {
    max-width: clamp(35px, 10vw, 40px);
    height: auto;
  }
</style>
