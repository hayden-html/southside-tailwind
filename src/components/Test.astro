---
const { classes } = Astro.props;
---

<div class={"form-container text-black " + classes}>
  <form
    id="form"
    class="needs-validation form text-black"
    data-astro-reload
    novalidate
  >
    <!-- Add your Web3Forms Access Key -->
    <input
      type="hidden"
      name="access_key"
      value="1c2ab10e-af67-490e-b5ca-32ec4a2df71f"
    />

    <input
      type="checkbox"
      class="hidden"
      style="display:none"
      name="botcheck"
    />
    <div class="mb-5">
      <input
        type="text"
        placeholder="Full Name"
        required
        class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none focus:ring-2 ring-cake-400"
        name="name"
      />
      <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please provide your full name.
      </div>
    </div>
    <div class="mb-5">
      <label for="email_address" class="sr-only">Email Address</label><input
        id="email_address"
        type="email"
        placeholder="Email Address"
        name="email"
        required
        class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none focus:ring-2 ring-cake-400"
      />
      <div class="empty-feedback text-red-400 text-sm mt-1">
        Please provide your email address.
      </div>
      <div class="invalid-feedback text-red-400 text-sm mt-1">
        Please provide a valid email address.
      </div>
    </div>
    <div class="mb-5">
      <label for="subject" class="sr-only">Subject</label>
      <input
        type="text"
        id="subject"
        name="subject"
        class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none focus:ring-2 ring-cake-400"
        placeholder="Subject"
        required
      />
    </div>
    <div class="mb-3">
      <textarea
        name="message"
        required
        placeholder="Your Message"
        class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none h-36 focus:ring-2 ring-cake-400"
      ></textarea>
      <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please enter your message.
      </div>
    </div>
    <button type="submit" class="btn" id="submit">Send Message</button>
  </form>
  <!-- Form fields -->
  <div id="result" class="mt-3 text-center m-auto self-center result">Sent</div>
</div>

<style lang="scss">
  .form-container {
    width: clamp(260px, 90vw, 600px);
    overflow: hidden;
    display: flex;
    position: relative;

    input:focus {
      border: none;
    }
  }

  .form {
    width: 100%;
    flex: 0 0 100%;
    transition: transform 0.5s ease-in-out;
  }

  .form.slide-out {
    transform: translateX(-100%);
  }

  .result {
    width: 100%;
    flex: 0 0 100%;
    transition: transform 0.5s ease-in-out;
    display: flex;
    justify-content: center;
    align-items: center;
    transform: translateX(100%);
  }

  .result.slide-in {
    transform: translateX(0);
  }

  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("form");
    const result = document.getElementById("result");
    const submitButton = document.getElementById("submit");

    let isSubmitting = false;

    form.addEventListener("submit", function (e) {
      e.preventDefault();

      if (isSubmitting) {
        return;
      }

      isSubmitting = true;
      submitButton.disabled = true;

      form.classList.add("was-validated");
      if (!form.checkValidity()) {
        form.querySelectorAll(":invalid")[0].focus();
        isSubmitting = false;
        submitButton.disabled = false;
        return;
      }

      const formData = new FormData(form);
      const object = Object.fromEntries(formData);
      const json = JSON.stringify(object);

      submitButton.innerHTML = "Sending...";
      submitButton.classList.add("sending");

      fetch("https://api.web3forms.com/submit", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
        body: json,
      })
        .then(async (response) => {
          let json = await response.json();
          if (response.status === 200) {
            form.classList.add("slide-out");
            setTimeout(() => {
              result.classList.add("slide-in");
            }, 500);
          } else {
            console.log(response);
            result.classList.add("text-red-500");
            result.innerHTML = json.message;
          }
        })
        .catch((error) => {
          console.log(error);
          result.innerHTML = "Something went wrong!";
        })
        .finally(() => {
          isSubmitting = false;
          submitButton.disabled = false;
        });
    });
  });
</script>
